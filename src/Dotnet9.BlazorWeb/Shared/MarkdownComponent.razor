@using Markdig

<div class="line-numbers">
    @{
        if (HasXss)
        {
            @_postHtmlContent.ToString()
        }
        else
        {
            @_postHtmlContent
        }
    }
</div>

@code {

    [Parameter]
    public string? MarkdownContent { get; set; }

    private bool HasXss { get; set; }

    private MarkupString _postHtmlContent;

    [Inject]
    private IJSRuntime? JsRuntime { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(MarkdownContent))
        {
            return;
        }
        var htmlData = Markdown.ToHtml(MarkdownContent);
        if (htmlData.Contains("<script") || htmlData.Contains("<link"))
        {
            HasXss = true;
        }
        _postHtmlContent = (MarkupString)htmlData;
        await base.OnParametersSetAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime!.InvokeVoidAsync("Prism.highlightAll");
    }

}