@using Dotnet9.Tools.Web.Models
@layout DocLayout

<MRow>
    @if (Items != null)
    {
        @foreach (var item in Items)
        {
            <MCol key="@item.FirstTitle" Class="col-xl-3 col-lg-4 col-sm-6 col-12 text-truncate">
                <MCard Class="m-0 p-0" Outlined>
                    <MImage Src="@(item.Cover ?? ConstData.DynamicImageApi)" Class="white--text align-end" Gradient="to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)" Height=200>
                        @if (!string.IsNullOrWhiteSpace(item.FirstTitle))
                        {
                            <MToolbarTitle Class="ml-0 mt-1 mb-1 pt-0 pb-0 pl-2 text-h6 white--text bg-black bg-opacity-25">
                                <MButton Class="ma-2 white--text text-capitalize" Color="rgba(0,0,0,0.6);" Rounded Href="@item.FirstUrl">
                                    @item.FirstTitle
                                </MButton>
                            </MToolbarTitle>
                        }
                    </MImage>

                    @if (!string.IsNullOrWhiteSpace(item.SecondTitle))
                    {
                        <MButton Color="black text-truncate text-capitalize" Text Rounded Href="@item.SecondUrl">
                            @item.SecondTitle
                        </MButton>
                        <MCardActions Class="ma-0 pa-0">
                            <MSpacer></MSpacer>
                            <MButton Icon>
                                <MIcon>mdi-heart</MIcon>
                            </MButton>
                            <MButton Icon>
                                <MIcon>mdi-bookmark</MIcon>
                            </MButton>
                            <MButton Icon>
                                <MIcon>mdi-share-variant</MIcon>
                            </MButton>
                        </MCardActions>
                        <MDivider></MDivider>
                        <MCardActions>
                            @if (!string.IsNullOrWhiteSpace(item.Author))
                            {
                                <span>
                                    <a href="@item.OriginalLink" alt="@item.Author" target="_blank">@item.Author</a>
                                </span>
                            }
                            <MSpacer></MSpacer>
                            <span>@item.Date</span>
                        </MCardActions>
                    }
                </MCard>
            </MCol>
        }
    }
</MRow>

@code
{
    [Parameter]
    public List<CardItem>? Items { get; set; }

    [CascadingParameter]
    public PublicLayout? MainLayout { get; set; }

    public string T(string key)
    {
        return MainLayout?.T(key) ?? string.Empty;
    }
}