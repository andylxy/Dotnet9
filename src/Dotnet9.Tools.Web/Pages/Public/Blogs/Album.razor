@page "/album/{slug?}"
@using Dotnet9.Tools.Web.Utils
@using Dotnet9.Tools.Web.Models
@using Dotnet9.Tools.Web.Shared.Public
@layout DocLayout

<PageTitle>专辑 - D9工具箱</PageTitle>

<h1 class="entry-title">专辑 @(string.IsNullOrWhiteSpace(_albumName) ? "" : $":{_albumName}")</h1>

@if (_items is not {Count: > 0 })
{
    <NotFound/>
}
else
{
    <CardItemList Items="_items"></CardItemList>
}

@code {

    [Parameter]
    public string? Slug { get; set; }

    List<CardItem>? _items;

    private string? _albumName;

    protected override async Task OnParametersSetAsync()
    {
        _items?.Clear();
        if (string.IsNullOrWhiteSpace(Slug))
        {
            _items = ConstData.AlbumTreeItems!.Select(x => new CardItem(secondTitle: x.Name, secondUrl: x.Slug.GetAlbumUrl(), cover: x.Cover, author: "沙漠尽头的狼")).ToList();
            return;
        }

        var album = ConstData.AlbumTreeItems!.FirstOrDefault(x => x.Slug == Slug);
        if (album == null) return;

        _albumName = album.Name;
        var posts = ConstData.BlogPostItems!.FindAll(x => x.Albums != null && x.Albums.Contains(album.Name));

        _items = posts.Select(x =>
        {
            var category = ConstData.CategoryNotTreeItems.FirstOrDefault(c => c.Name == x.Categories![0]);
            return CardItemExtension.CreateCardItem(category, x);
            ;
        }).ToList();
        await base.OnParametersSetAsync();
    }

}

<style>
    .entry-title { text-align: left; }
</style>