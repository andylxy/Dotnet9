@page "/admin/album"
@using Dotnet9.Albums
@using Dotnet9.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inherits Dotnet9ComponentBase
@inject IAlbumAppService AlbumAppService
@inject AbpBlazorMessageLocalizerHelper<Dotnet9Resource> LH
<Card>
    <CardHeader>
        <Row>
            <Column ColumnSize="ColumnSize.Is6">
                <h2>@L["Albums"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.Is5">
                <TextEdit Text="@Filter" TextChanged="@OnFilterChanged" Placeholder="@L["SearchText"]"></TextEdit>
            </Column>
            <Column ColumnSize="ColumnSize.Is1">
                <Paragraph TextAlignment="TextAlignment.End">
                    @if (CanCreateAlbum)
                    {
                        <Button Color="Color.Primary"
                                Clicked="OpenCreateAlbumModal">
                            @L["NewAlbum"]
                        </Button>
                    }
                </Paragraph>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="AlbumDto"
                  Data="AlbumList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="AlbumDto"
                                Field="@nameof(AlbumDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        @if (CanEditAlbum)
                        {
                            <Button Color="Color.Secondary" Clicked="() => OpenEditAlbumModal(context)">
                                @L["Edit"]
                            </Button>
                        }
                        @if (CanDeleteAlbum)
                        {
                            <Button Color="Color.Danger" Clicked="() => DeleteAlbumAsync(context)">
                                @L["Delete"]
                            </Button>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="AlbumDto"
                                Field="@nameof(AlbumDto.Name)"
                                Caption="@L["Name"]">
                </DataGridColumn>
                <DataGridColumn TItem="AlbumDto"
                                Field="@nameof(AlbumDto.Description)"
                                Caption="@L["Description"]">
                </DataGridColumn>
                <DataGridColumn TItem="AlbumDto"
                                Field="@nameof(AlbumDto.CoverImageUrl)"
                                Caption="@L["CoverImageUrl"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateAlbumModal">
    <ModalBackdrop/>
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewAlbum"]</ModalTitle>
                <CloseButton Clicked="CloseCreateAlbumModal"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@_createValidationsRef" Model="@NewAlbum" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewAlbum.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@NewAlbum.Description">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["CoverImageUrl"]</FieldLabel>
                            <TextEdit @bind-Text="@NewAlbum.CoverImageUrl">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateAlbumModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateAlbumAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditAlbumModal">
    <ModalBackdrop/>
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingAlbum.Name</ModalTitle>
                <CloseButton Clicked="CloseEditAlbumModal"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@_editValidationsRef" Model="@EditingAlbum" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingAlbum.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Description"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingAlbum.Description">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["CoverImageUrl"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingAlbum.CoverImageUrl">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditAlbumModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateAlbumAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>