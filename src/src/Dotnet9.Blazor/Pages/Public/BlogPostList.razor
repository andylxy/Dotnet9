@page "/cat/{Category}"
@page "/s/{Filter}"

@using Dotnet9.Blogs
@using Dotnet9.Categories
@using JetBrains.Annotations
@using Volo.Abp.Application.Dtos
@using System.Net
@using Castle.Components.DictionaryAdapter
@inject IBlogPostAppService _blogPostAppService

<MRow>
    <MCol Md="10" Sm="12">
        <MCard>
            @if (BlogPostListItems != null)
            {
                <MRow Class="mt-4">
                    @foreach (var blogPostDto in BlogPostListItems)
                    {
                        <MCol Class="col-xl-3 col-lg-4 col-sm-6 col-12 text-truncate">

                            <MCard Class="mx-auto" Outlined>
                                <MImage Class="align-end hvr-float-shadow" src="@blogPostDto.CoverImageUrl">
                                    <MToolbarTitle Class="ml-0 mt-1 mb-1 pt-0 pb-0 pl-2 text-h6 white--text bg-black bg-opacity-25">
                                        <a style="text-decoration: none; color: #fff;" href="/@blogPostDto.Slug">WPF</a>
                                    </MToolbarTitle>
                                </MImage>
                                <MCardTitle Class="ml-0 mt-1 mb-1 pt-0 pb-0 pl-2">
                                    <a style="text-decoration: none; color: #000;" href="/@blogPostDto.Slug">
                                        @blogPostDto.Title
                                    </a>
                                </MCardTitle>
                                <MCardActions Class="m-0 pl-2 pt-0 pb-0">
                                    <MButton Icon>
                                        <MIcon>mdi-eye</MIcon>
                                    </MButton>
                                    <span class="subheading mr-2">63</span>
                                    <span class="mr-1">·</span>
                                    <MButton Icon>
                                        <MIcon>mdi-heart</MIcon>
                                    </MButton>
                                    <span class="subheading mr-2">6</span>
                                    <span class="mr-1">·</span>
                                    <MButton Icon>
                                        <MIcon>mdi-bookmark</MIcon>
                                    </MButton><span class="subheading mr-2">13</span>
                                    <span class="mr-1">·</span>
                                    <MButton Icon>
                                        <MIcon>mdi-share-variant</MIcon>
                                    </MButton><span class="subheading">9</span>
                                </MCardActions>
                                <MDivider Class="m-0 p-0"></MDivider>
                                <MCardActions Class="m-0 pt-0 pb-0 pr-2">
                                    <MButton Icon>
                                        <MIcon>mdi-account-circle</MIcon>
                                    </MButton>
                                    <small>@(blogPostDto.Original.IsNullOrWhiteSpace() ? "沙漠尽头的狼" : blogPostDto.Original)</small>
                                    <MSpacer></MSpacer>
                                    <MButton Icon>
                                        <MIcon>mdi-alarm</MIcon>
                                    </MButton>
                                    <small style="opacity: 0.65;">@blogPostDto.CreationTime.ToString("yyyy-MM-dd")</small>
                                </MCardActions>
                            </MCard>
                        </MCol>
                    }
                </MRow>
            }
            <div class="div-load-button">
                @if (((TotalCount + PageSize - 1) / PageSize) > CurrentPage)
                {
                    <MButton Class="ma-2" Loading="_isLoading" Disabled="_isLoading" Color="info" OnClick="ReadDataAsync">
                        <LoaderContent>
                            <span class="custom-loader">
                                <MIcon>mdi-cached</MIcon>
                            </span>
                        </LoaderContent>
                        <ChildContent>
                            Load more
                        </ChildContent>
                    </MButton>
                }
                else
                {
                    <MButton class="ma-2" Outlined Color="indigo">
                        No more data!
                    </MButton>
                }
            </div>
        </MCard>
    </MCol>
    <MCol Md="2" Class="d-none d-sm-none d-md-flex">
        <div>
            <HomeRightSidebar/>
        </div>
    </MCol>
</MRow>
<MRow>
    <MCol>
        <Footer/>
    </MCol>
</MRow>

@code {

    [CanBeNull]
    [Parameter]
    public string Filter { get; set; }

    [CanBeNull]
    [Parameter]
    public string Category { get; set; }

    private int PageSize { get; } = LimitedResultRequestDto.DefaultMaxResultCount;

    private int CurrentPage { get; set; }

    private int TotalCount { get; set; }

    private bool _isLoading;

    [CanBeNull]
    private List<BlogPostDto> BlogPostListItems { get; set; }


    protected override async Task OnInitializedAsync()
    {
        CurrentPage = 0;
        BlogPostListItems?.Clear();

        await ReadDataAsync();
    }

    private async Task ReadDataAsync()
    {
        var key = Category == null ? "" : System.Web.HttpUtility.UrlDecode(Category).ToLower();
        _isLoading = true;
        var result = await _blogPostAppService.GetListAsync(new GetBlogPostListDto() { Category = key, Filter = Filter, Sorting = nameof(BlogPostDto.CreationTime), MaxResultCount = PageSize, SkipCount = CurrentPage * PageSize });
        _isLoading = false;
        CurrentPage++;

        BlogPostListItems ??= new EditableList<BlogPostDto>();
        if (result.Items is {Count: > 0 })
        {
            BlogPostListItems.AddRange(result.Items);
        }
        TotalCount = (int)result.TotalCount;
    }

}

<style>
    a:hover { color: rgba(0, 0, 255, 0.52) }

    .div-load-button { text-align: center; }

    .custom-loader {
        animation: loader 1s infinite;
        display: flex;
    }
</style>